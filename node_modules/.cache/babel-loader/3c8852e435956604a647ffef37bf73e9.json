{"ast":null,"code":"var _jsxFileName = \"/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss';\n\nclass ToDo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addItem = item => {\n      item._id = Math.random();\n      item.complete = false;\n      this.setState({\n        list: [...this.state.list, item]\n      });\n      console.log(this.state);\n    };\n\n    this.toggleComplete = id => {\n      let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n      if (item._id) {\n        item.complete = !item.complete;\n        let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n        this.setState({\n          list\n        });\n      }\n    };\n\n    this.state = {\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    this.setState({\n      list\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"There are \", this.state.list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TodoForm, {\n      handleSubmit: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TodoList, {\n      list: this.state.list,\n      handleComplete: this.toggleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} //===============================================================================================\n\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ToDoTest;","map":{"version":3,"sources":["/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","ToDo","Component","constructor","props","addItem","item","_id","Math","random","complete","setState","list","state","console","log","toggleComplete","id","filter","i","map","listItem","componentDidMount","text","difficulty","assignee","render","length","ToDoTest","setList","newList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nclass ToDo extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    this.setState({ list: [...this.state.list, item] });\n    console.log(this.state);\n  };\n\n  toggleComplete = id => {\n\n    let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n      this.setState({ list });\n    }\n  };\n\n  componentDidMount() {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    this.setState({ list });\n  }\n\n  render() {\n    return (\n      <>\n        <header>\n          <h2>\n            There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n          </h2>\n        </header>\n\n        <section className=\"todo\">\n\n          <div>\n            <TodoForm handleSubmit={this.addItem} />\n          </div>\n\n          <div>\n            <TodoList\n              list={this.state.list}\n              handleComplete={this.toggleComplete}\n            />\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\n//===============================================================================================\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  const toggleComplete = id => {\n\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(list);\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={toggleComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default ToDoTest;\n"]},"metadata":{},"sourceType":"module"}