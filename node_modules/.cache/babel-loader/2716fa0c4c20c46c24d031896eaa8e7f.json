{"ast":null,"code":"var _jsxFileName = \"/home/bashar/code-401/labs/to-do-list/src/components/todo/form.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nfunction ToDoFormTest(props) {\n  const [item, addNewItem] = useState('');\n\n  const handleInputChange = event => {\n    addNewItem({ ...item,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.target.reset();\n    props.handleSubmit(item);\n    addNewItem(item);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Add Item\", /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Add To Do List Item\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Assigned To\", /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Assigned To\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Difficulty Rating\", /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"range\",\n    defaultValue: \"1\",\n    type: \"range\",\n    min: \"1\",\n    max: \"5\",\n    name: \"difficulty\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nexport default ToDoFormTest;","map":{"version":3,"sources":["/home/bashar/code-401/labs/to-do-list/src/components/todo/form.js"],"names":["React","useState","Form","FormControl","Button","ToDoFormTest","props","item","addNewItem","handleInputChange","event","target","name","value","handleSubmit","preventDefault","reset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMQ,iBAAiB,GAAGC,KAAK,IAAI;AACjCF,IAAAA,UAAU,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA7C,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGJ,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AACAL,IAAAA,KAAK,CAACC,MAAN,CAAaK,KAAb;AACAV,IAAAA,KAAK,CAACQ,YAAN,CAAmBP,IAAnB;AACAC,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GALD;;AAOA,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,qBAAtC;AAA4D,IAAA,QAAQ,EAAEL,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,YAAY,EAAC,GAAxC;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,GAAG,EAAC,GAA7D;AAAiE,IAAA,GAAG,EAAC,GAArE;AAAyE,IAAA,IAAI,EAAC,YAA9E;AAA2F,IAAA,QAAQ,EAAEA,iBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,CADF,eAeE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADF,CADF;AAwBD;;AAED,eAAeJ,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\n\nfunction ToDoFormTest(props) {\n  const [item, addNewItem] = useState('');\n\n  const handleInputChange = event => {\n    addNewItem({ ...item, [event.target.name]: event.target.value });\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    event.target.reset();\n    props.handleSubmit(item);\n    addNewItem(item);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>\n            Add Item\n          <Form.Control type=\"text\" placeholder=\"Add To Do List Item\" onChange={handleInputChange} />\n          </Form.Label>\n          <Form.Label>\n            Assigned To\n            <Form.Control type=\"text\" placeholder=\"Assigned To\" />\n          </Form.Label>\n          <Form.Label>\n            Difficulty Rating\n            <Form.Control type=\"range\" defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </Form.Label>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n  </Button>\n      </Form>\n    </>\n  );\n\n}\n\nexport default ToDoFormTest;\n"]},"metadata":{},"sourceType":"module"}