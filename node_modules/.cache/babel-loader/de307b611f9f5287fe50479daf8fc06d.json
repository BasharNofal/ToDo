{"ast":null,"code":"var _jsxFileName = \"/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { If, Then, Else } from 'react-if';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss';\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n  const [isOpen, setUpdateForm] = useState(false);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      let newList = list.filter(items => items !== item);\n      setList(newList);\n    }\n  };\n\n  const updateItem = async id => {\n    if (!isOpen) {\n      let formState = await !isOpen;\n      setUpdateForm(formState);\n    }\n\n    let item = list.filter(item => item._id === id)[0] || {}; // console.log(document.querySelector('#updateText'))\n\n    document.querySelector('#updateText').value = item.text;\n    document.querySelector('#updateAssignee').value = item.assignee;\n    document.querySelector('#updateDifficulty').value = item.difficulty;\n    document.querySelector('#updateId').value = item._id; // let index = list.indexOf(item);\n    // item.text = 'edited';\n    // let newList = list.splice(index, 1, item);\n    // console.log(newList);\n    // console.log(list);\n    // setList(newList);\n  };\n\n  const handleUpdateForm = event => {\n    event.preventDefault();\n    let id = document.querySelector('#updateId').value;\n    let item = list.filter(item => item._id == id)[0];\n    let index = list.indexOf(item);\n    item.text = document.querySelector('#updateText').value;\n    item.assignee = document.querySelector('#updateAssignee').value;\n    item.difficulty = document.querySelector('#updateDifficulty').value;\n    console.log(index);\n    let newList = list;\n    newList[index] = item;\n    console.log(newList);\n    setList(newList);\n    console.log(list);\n    setUpdateForm(!isOpen);\n  };\n\n  const closeUpdateForm = event => {\n    event.preventDefault();\n    let formState = !isOpen;\n    setUpdateForm(formState);\n  };\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(If, {\n    condition: !isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Then, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    handleDelete: deleteItem,\n    handleUpdate: updateItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Else, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Add To Do Item\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleUpdateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"To Do Item\", /*#__PURE__*/React.createElement(FormControl, {\n    id: true,\n    name: \"text\",\n    placeholder: \"Item Details\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Difficulty Rating\", /*#__PURE__*/React.createElement(FormControl, {\n    type: \"range\",\n    defaultValue: \"1\",\n    type: \"range\",\n    min: \"1\",\n    max: \"5\",\n    name: \"difficulty\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Assigned To\", /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Assigned Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"updateId\",\n    type: \"number\",\n    hidden: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Title\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"updateText\",\n    type: \"text\",\n    name: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"assignee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Assignee\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"updateAssignee\",\n    type: \"text\",\n    name: \"assignee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Difficulty Range\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"updateDifficulty\",\n    defaultValue: \"1\",\n    type: \"range\",\n    min: \"1\",\n    max: \"5\",\n    name: \"difficulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dueDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Due Date\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"dueDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \" Update \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeUpdateForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Close\")))))));\n}\n\nexport default ToDoTest;","map":{"version":3,"sources":["/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js"],"names":["React","useState","useEffect","If","Then","Else","TodoForm","TodoList","ToDoTest","props","list","setList","isOpen","setUpdateForm","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","newList","map","listItem","deleteItem","items","updateItem","formState","document","querySelector","value","text","assignee","difficulty","handleUpdateForm","event","preventDefault","index","indexOf","console","log","closeUpdateForm","length","handleInputChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { If, Then, Else } from 'react-if';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss';\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n  const [isOpen, setUpdateForm] = useState(false);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  const toggleComplete = id => {\n\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n    if (item._id) {\n      let newList = list.filter(items => items !== item);\n      setList(newList);\n    }\n  }\n\n  const updateItem = async id => {\n    if (!isOpen) {\n      let formState = await !isOpen;\n      setUpdateForm(formState);\n    }\n    let item = list.filter(item => item._id === id)[0] || {};\n    // console.log(document.querySelector('#updateText'))\n    document.querySelector('#updateText').value = item.text;\n    document.querySelector('#updateAssignee').value = item.assignee;\n    document.querySelector('#updateDifficulty').value = item.difficulty;\n    document.querySelector('#updateId').value = item._id;\n    // let index = list.indexOf(item);\n    // item.text = 'edited';\n    // let newList = list.splice(index, 1, item);\n    // console.log(newList);\n    // console.log(list);\n    // setList(newList);\n  }\n\n  const handleUpdateForm = event => {\n    event.preventDefault();\n    let id = document.querySelector('#updateId').value;\n    let item = list.filter(item => item._id == id)[0];\n    let index = list.indexOf(item);\n    item.text = document.querySelector('#updateText').value;\n    item.assignee = document.querySelector('#updateAssignee').value;\n    item.difficulty = document.querySelector('#updateDifficulty').value;\n    console.log(index)\n    let newList = list;\n    newList[index] = item;\n    console.log(newList)\n    setList(newList);\n    console.log(list);\n    setUpdateForm(!isOpen)\n\n  }\n\n  const closeUpdateForm = event => {\n    event.preventDefault()\n    let formState = !isOpen;\n    setUpdateForm(formState);\n  }\n\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(list);\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </header>\n      <section className=\"todo\">\n\n        <If condition={!isOpen}>\n          <Then>\n            <div>\n              <TodoForm handleSubmit={addItem} />\n            </div>\n\n            <div>\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete} handleDelete={deleteItem} handleUpdate={updateItem}\n              />\n            </div>\n          </Then>\n          <Else>\n            <div>\n            <h3>Add To Do Item</h3>\n      <Form onSubmit={handleUpdateForm}>\n        <FormGroup controlId=\"formBasicEmail\">\n          \n          <FormLabel>\n            To Do Item\n          <FormControl id name=\"text\" placeholder=\"Item Details\" onChange={handleInputChange} />\n          </FormLabel>\n          <FormLabel>\n            Difficulty Rating\n            <FormControl type=\"range\" defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </FormLabel>\n          <FormLabel>\n            Assigned To\n            <FormControl type=\"text\" placeholder=\"Assigned Name\" />\n          </FormLabel>\n        </FormGroup>\n        <Button type=\"submit\" variant=\"primary\" >\n          Submit\n        </Button>\n      </Form>\n              <form onSubmit={handleUpdateForm}>\n                <input id=\"updateId\" type=\"number\" hidden value=\"\" />\n                <label htmlFor=\"text\">\n                  Title\n                  <input id=\"updateText\" type=\"text\" name=\"text\" />\n                </label>\n                <label htmlFor=\"assignee\">\n                  Assignee\n                  <input id=\"updateAssignee\" type=\"text\" name=\"assignee\" />\n                </label>\n                <label htmlFor=\"difficulty\">Difficulty Range\n                <input id=\"updateDifficulty\" defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" />\n                </label>\n                <label htmlFor=\"dueDate\">\n                  Due Date\n                  <input type=\"date\" name=\"dueDate\" />\n                </label>\n                <button> Update </button>\n                <button onClick={closeUpdateForm}>Close</button>\n              </form>\n            </div>\n          </Else>\n          </If>\n      </section>\n    </>\n  );\n}\n\nexport default ToDoTest;\n"]},"metadata":{},"sourceType":"module"}