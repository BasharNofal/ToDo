{"ast":null,"code":"var _jsxFileName = \"/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss'; // class ToDo extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item] });\n//     console.log(this.state);\n//   };\n//   toggleComplete = id => {\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({ list });\n//     }\n//   };\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n//     ];\n//     this.setState({ list });\n//   }\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//             There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n//         <section className=\"todo\">\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n//===============================================================================================\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = item => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      let newList = list.filter(items => items !== item);\n      setList(newList);\n    }\n  };\n\n  const updateItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n    console.log(TodoForm); // let index = list.indexOf(item);\n    // item.text = 'edited';\n    // let newList = list.splice(index, 1, item);\n    // console.log(newList);\n    // console.log(list);\n    // setList(newList);\n  }; // \"test a a test\"\n\n  /*\n  let word\n  for (i = 0; i<string.length; i++){\n    if(string[i] !== ' ')\n    word += string[i]\n  } */\n\n\n  useEffect(() => {\n    let list = [{\n      _id: 1,\n      complete: false,\n      text: 'Clean the Kitchen',\n      difficulty: 3,\n      assignee: 'Person A'\n    }, {\n      _id: 2,\n      complete: false,\n      text: 'Do the Laundry',\n      difficulty: 2,\n      assignee: 'Person A'\n    }, {\n      _id: 3,\n      complete: false,\n      text: 'Walk the Dog',\n      difficulty: 4,\n      assignee: 'Person B'\n    }, {\n      _id: 4,\n      complete: true,\n      text: 'Do Homework',\n      difficulty: 3,\n      assignee: 'Person C'\n    }, {\n      _id: 5,\n      complete: false,\n      text: 'Take a Nap',\n      difficulty: 1,\n      assignee: 'Person B'\n    }];\n    setList(list);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"There are \", list.filter(item => !item.complete).length, \" Items To Complete\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    handleSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    list: list,\n    handleComplete: toggleComplete,\n    handleDelete: deleteItem,\n    handleUpdate: updateItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ToDoTest;","map":{"version":3,"sources":["/home/bashar/code-401/labs/to-do-list/src/components/todo/todo.js"],"names":["React","useState","useEffect","TodoForm","TodoList","ToDoTest","props","list","setList","addItem","item","_id","Math","random","complete","toggleComplete","id","filter","newList","map","listItem","deleteItem","items","updateItem","console","log","text","difficulty","assignee","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport './todo.scss';\n\n// class ToDo extends React.Component {\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       list: [],\n//     };\n//   }\n\n//   addItem = (item) => {\n//     item._id = Math.random();\n//     item.complete = false;\n//     this.setState({ list: [...this.state.list, item] });\n//     console.log(this.state);\n//   };\n\n//   toggleComplete = id => {\n\n//     let item = this.state.list.filter(i => i._id === id)[0] || {};\n\n//     if (item._id) {\n//       item.complete = !item.complete;\n//       let list = this.state.list.map(listItem => listItem._id === item._id ? item : listItem);\n//       this.setState({ list });\n//     }\n//   };\n\n//   componentDidMount() {\n//     let list = [\n//       { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n//       { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n//       { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n//       { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n//       { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n//     ];\n\n//     this.setState({ list });\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <header>\n//           <h2>\n//             There are {this.state.list.filter(item => !item.complete).length} Items To Complete\n//           </h2>\n//         </header>\n\n//         <section className=\"todo\">\n\n//           <div>\n//             <TodoForm handleSubmit={this.addItem} />\n//           </div>\n\n//           <div>\n//             <TodoList\n//               list={this.state.list}\n//               handleComplete={this.toggleComplete}\n//             />\n//           </div>\n//         </section>\n//       </>\n//     );\n//   }\n// }\n\n//===============================================================================================\n\nfunction ToDoTest(props) {\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  const toggleComplete = id => {\n\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let newList = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(newList);\n    }\n  };\n\n  const deleteItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n    if (item._id) {\n      let newList = list.filter(items => items !== item);\n      setList(newList);\n    }\n  }\n\n  const updateItem = id => {\n    let item = list.filter(item => item._id === id)[0] || {};\n\n    console.log(TodoForm);\n    // let index = list.indexOf(item);\n    // item.text = 'edited';\n    // let newList = list.splice(index, 1, item);\n    // console.log(newList);\n    // console.log(list);\n    // setList(newList);\n  }\n// \"test a a test\"\n/*\nlet word\nfor (i = 0; i<string.length; i++){\n  if(string[i] !== ' ')\n  word += string[i]\n} */\n  useEffect(() => {\n    let list = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(list);\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length} Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={toggleComplete} handleDelete={deleteItem} handleUpdate={updateItem}\n          />\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default ToDoTest;\n"]},"metadata":{},"sourceType":"module"}